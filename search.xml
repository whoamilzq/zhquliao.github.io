<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[矩阵的压缩存储]]></title>
    <url>%2Fposts%2F2f6a46ed%2F</url>
    <content type="text"><![CDATA[矩阵是很多科学工程计算问题中研究的数学对象。在此，我们感兴趣的不是矩阵本身，而是如何存储矩阵的元，从而使矩阵的各种运算能有效地进行。通常，用高级语言编程时，都是用二维数组来储存矩阵元。有的程序设计语言还提供了各种矩阵运算，用户使用时都很方便。然而，在数值分析中经常出现一些阶数很高的矩阵，同时在矩阵中有许多值相同的元素或者是零元素。又是为了节省存储空间，可以对这类矩阵进行压缩存储。所谓压缩存储就是为多个值相同的元只分配一个存储空间，对零元不分配空间。 特殊矩阵若值相同的元素或者零元素在矩阵中的分布有一定规律，则我们称这类矩阵为特殊矩阵，否则为特殊矩阵。若 $n$ 阶矩阵 $A$ 满足以下性质$$a_{ij}=a_{ji}(1\leq i,j\leq n)$$则称为 $n$ 阶对称矩阵。 对于对称矩阵，我们可以为每一个对称元分配一个存储空间，则可以将 $n^2$ 个元压缩存储到 $\frac{n(n+1)}{2}$ 个元的空间中。可以行序为主序存储其下三角（包括对角线）中的元。 假设以一维数组 $sa[\frac{n(n+1)}{2}]$ 作为 $n$阶对称矩阵 $A$ 的存储结构，则 $sa[k]$ 和矩阵之间存在一一对应的关系： $$\begin{aligned}k =\begin{cases}\frac {i(i-1)}{2}+j-1 &amp;{i\geq j} \\\frac{j(j-1)}{2}+i-1 &amp;{i &lt; j}\end{cases}\end{aligned}$$ 对于所有的 $k=0,1,2,…,\frac{n(n+1)}{2}-1$，都能确定 $sa[k]$ 中的元在矩阵中的位置 $(i,j)$。由此称 $sa[\frac{n(n+1)}{2}]$ 为 $n$ 阶对称阵 $A$ 的压缩存储。 这种压缩存储的方法同样也适用于三角矩阵。所谓上（下）三角矩阵是指矩阵的上（下）三角（不包括对角线）中的元均为常数或零的矩阵。则除了和对角矩阵一样只存储其上（下）三角中的元之外，再加一个存储常数的存储空间即可。 稀疏矩阵什么是稀疏矩阵？人们无法给出确切的定义，他只是一个仅凭人们直觉来了解的概念。假设在 $m\times n$ 的矩阵中，有 $t$ 个元素不为零。令 $\delta = \frac{t}{m\times n}$，则称 $\delta$ 为矩阵的稀疏因子。通常认为 $\delta \leq 0.05$ 时称为稀疏矩阵。 如何进行稀疏矩阵的压缩存储呢？按照压缩存储的概念，只存储稀疏矩阵的非零元。因此，除了存储非零元的值之外，还必须同时记下它所在行和列的位置 $(i,j)$。反之，三个元组 $(i,j,a_ij)$ 唯一确定了一个矩阵的非零元。可以用三元组对其行列数唯一确定。下列三元表((1,2,12),(1,3,9),(3,1,-3),(3,6,14),(4,3,24),(5,2,18),(6,1,15),(6,4,7))加上(6,7)这一对行、列值便可作为下面矩阵 $M$ 的另一种描述。 $$M =\left[\begin{matrix} 0 &amp; 12 &amp; 9 &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\ 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\ -3 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 14 &amp; 0 \\ 0 &amp; 0 &amp; 24 &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\ 0 &amp; 18 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\ 15 &amp; 0 &amp; 0 &amp; -7 &amp; 0 &amp; 0 &amp; 0\end{matrix}\right] \tag{3}$$ 三元顺序表 假设以顺序存储结构来表示三元组表，则可以的稀疏矩阵的一种压缩存储方式，我们称之为三元组顺序表。 123456789#define MAXSIZE 100typedef struct &#123; int i, j; // 该非零元行下标和列下标 ElemType e;&#125;Triple;typedef struct &#123; Triple data[MAXSIZE + 1]; // 非零元三元组表，data[0]未用 int mu,nu,tu; // 矩阵行数，列数和非零元个数&#125;TSMatrix;]]></content>
      <categories>
        <category>C语言</category>
      </categories>
      <tags>
        <tag>C语言</tag>
        <tag>矩阵</tag>
        <tag>特殊矩阵</tag>
        <tag>稀疏矩阵</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fposts%2F4a17b156%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
</search>
